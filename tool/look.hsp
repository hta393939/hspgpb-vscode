/**
 * @file look.hsp
 */

#include "hgimg4.as"

#define DELTA (0.001)
#const KEY_LBUT 0x100

#define EE (2.718281828)

	gpreset

	fov = 45.0
	id = -1
	key = 0
	max_y = -999
	sdim note, 4096
    sdim errmsg, 4096
	sdim name, 4096
	sdim text, 4096
	sdim one, 4096
	ddim ps, 6
	offset = 0

/*PARAMETERPOSITION*/

	notesel note

	exist "_name.txt"
	if strsize > 0 {
		noteload "_name.txt", 4000
		noteget name, 0

		noteget text, 1
		repeat 6
			getstr one, text, offset, ','
			offset += strsize
			ps.cnt = double(one)
		loop

	    gpload id, name
    	if (id < 0) {
        	errmsg = "gpload error, " + name
    	}
    } else {
	    errmsg = "Internal error"
	}

	w2 = (ps.3 - ps.0) * 0.5
    h2 = (ps.4 - ps.1) * 0.5
    d2 = (ps.5 - ps.2) * 0.5

	maxr = w2
	if w2 < h2 {
		maxr = h2
	}

    radius = maxr * 1.125 / tan(fov * 0.5 * M_PI / 180.0) + d2
    longi = 0.0
    lati = 0.0
    premousew = mousew

	step = radius / 128.0

	far = radius * 4.0
	near = radius / 256.0
	gpnull cameraid
	gpcamera cameraid, fov, 1.0, near, far
	gpusecamera cameraid

	keepx = 0
	keepy = 0
	predown = 0
	keeplongi = longi
	keeplati = lati
	mode = "pan"
	isplay = 0

*main
	curdown = 0

	stick key, KEY_LBUT
	down = key & KEY_LBUT
	if down {
		curdown = 1
	}
	curx = mousex
	cury = mousey

	iszoomdraw = 0
	if predown {
		if curdown {
			if mode == "pan" {
				// continue pan
				longi = - double(curx - keepx) + keeplongi
				lati = double(cury - keepy) + keeplati
			} else {
				radius = - double(cury - keepy) * step / 4.0 + keepradius
			}
		} else {
			// release
			mode = "pan"
			if 1 <= curx & curx < 32 {
				iszoomdraw = 1
			} else {
				
			}
		}
	} else {
		if curdown { // start action
			if 1 <= curx & curx < 32 { // zoom area
				mode = "zoom"
			} else {
				if 1 <= cury & cury < 32 {
					isplay = 1 - isplay
					gosub *anim
				}

				mode = "pan"
			}
			keepx = curx
			keepy = cury
			keeplongi = longi
			keeplati = lati
			keepradius = radius
		} else {
			// no action
			if 1 <= curx & curx < 32 { // hover zoom area
				iszoomdraw = 1
			} else {
				
			}
		}
	}
	predown = curdown
	if mode == "zoom" {
		iszoomdraw = 1
	}
	
	if lati >= 90.0 {
		lati = 90.0 - DELTA
	}
	if lati <= -90.0 {
		lati = -90.0 + DELTA
	}

	if radius < DELTA {
		radius = DELTA
	}

	lookat.0 = (ps.0 + ps.3) * 0.5, (ps.1 + ps.4) * 0.5, (ps.2 + ps.5) * 0.5

	vang = lati * M_PI / 180.0
	hang = longi * M_PI / 180.0
	rr = cos(vang)

	y = sin(vang)
	z = rr * cos(hang)
	x = rr * sin(hang)

    x = x * radius + lookat.0
    y = y * radius + lookat.1
    z = z * radius + lookat.2

    redraw 0

    color 0, 0, 0
    boxf 0, 0, 512, 512

	if 0 {
		color 128, 128, 160
		boxf 32, 1, 512, 32
	}
	if iszoomdraw {
	    color 128, 128, 128
    	boxf 1, 0, 31, 512
    }

    setpos cameraid, x, y, z
    gplookat cameraid, lookat.0, lookat.1, lookat.2

    gpdraw


    color 255, 255, 255
    pos 32 + 8, 32 + 8
    if (id < 0) {
        color 255, 0, 0
        print errmsg
    } else {
	    print "OK, " + radius + strf(", %.3f", curx) + strf(", %.3f", cury)
	    print strf("%.3f", ps.3) + strf(", %.3f", ps.4) + strf(", %.3f", ps.5)
	    print strf("%.3f", x) + strf(", %.3f", y) + strf(", %.3f", z)
	}

    redraw 1
    await 1000/30
    goto *main

*anim
	if id < 0 {
		return
	}
	if isplay {
		gpact id, "", GPACT_PLAY
	} else {
		gpact id, "", GPACT_PAUSE
	}
	return

